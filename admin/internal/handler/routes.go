// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.4

package handler

import (
	"net/http"

	admin "github.com/SnakeHacker/deepkg/admin/internal/handler/admin"
	document "github.com/SnakeHacker/deepkg/admin/internal/handler/document"
	document_dir "github.com/SnakeHacker/deepkg/admin/internal/handler/document_dir"
	file "github.com/SnakeHacker/deepkg/admin/internal/handler/file"
	org "github.com/SnakeHacker/deepkg/admin/internal/handler/org"
	user "github.com/SnakeHacker/deepkg/admin/internal/handler/user"
	"github.com/SnakeHacker/deepkg/admin/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/health",
				Handler: admin.HealthHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/document/create",
				Handler: document.CreateDocumentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/document/delete",
				Handler: document.DeleteDocumentsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/document/get",
				Handler: document.GetDocumentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/document/list",
				Handler: document.GetDocumentListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/document/update",
				Handler: document.UpdateDocumentHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/document_dir/create",
				Handler: document_dir.CreateDocumentDirHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/document_dir/delete",
				Handler: document_dir.DeleteDocumentDirsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/document_dir/get",
				Handler: document_dir.GetDocumentDirHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/document_dir/list",
				Handler: document_dir.GetDocumentDirListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/document_dir/update",
				Handler: document_dir.UpdateDocumentDirHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/file/upload",
				Handler: file.UploadFileHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/org/create",
				Handler: org.CreateOrgHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/org/delete",
				Handler: org.DeleteOrgsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/org/get",
				Handler: org.GetOrgHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/org/list",
				Handler: org.GetOrgListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/org/update",
				Handler: org.UpdateOrgHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/create",
				Handler: user.CreateUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/delete",
				Handler: user.DeleteUsersHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/get",
				Handler: user.GetUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/list",
				Handler: user.GetUserListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/update",
				Handler: user.UpdateUserHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)
}
