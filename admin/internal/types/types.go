// Code generated by goctl. DO NOT EDIT.
package types

type GetHealthResp struct {
	Result string `json:"result"`
}

type StreamChatReq struct {
	Content     string    `json:"content"`
	History     []Message `json:"history,optional"`
	WorkspaceID int       `json:"workspace_id, optional"`
}

type StreamChatResp struct {
	Result string `json:"result"`
}

type Message struct {
	Role    string `json:"role"`
	Content string `json:"content"`
}

type PaginationParams struct {
	PageSize   int `json:"page_size"`
	PageNumber int `json:"page_number"`
}

type Document struct {
	ID          int64  `json:"id, optional"`
	DocName     string `json:"doc_name, optional"`
	DocDesc     string `json:"doc_desc, optional"`
	DocPath     string `json:"doc_path, optional"`
	DirID       int64  `json:"dir_id, optional"`
	CreatorID   int64  `json:"creator_id,optional"`
	CreatorName string `json:"creator_name,optional"`
	CreatedAt   string `json:"created_at,optional"`
	UpdatedAt   string `json:"updated_at,optional"`
}

type GetDocumentListReq struct {
	DirID int64 `json:"dir_id,optional"`
	PaginationParams
}

type GetDocumentListResp struct {
	Total      int64      `json:"total"`       // 总记录数
	Documents  []Document `json:"documents"`   // 列表
	PageSize   int        `json:"page_size"`   // 每页大小
	PageNumber int        `json:"page_number"` // 当前页码
}

type GetDocumentReq struct {
	ID int64 `json:"id"`
}

type GetDocumentResp struct {
	Document Document `json:"document"`
}

type CreateDocumentReq struct {
	Document      Document `json:"document"`
	Authorization string   `header:"Authorization"`
}

type UpdateDocumentReq struct {
	Document      Document `json:"document"`
	Authorization string   `header:"Authorization"`
}

type DeleteDocumentsReq struct {
	IDs []int64 `json:"ids"`
}

type DocumentDir struct {
	ID        int64         `json:"id, optional"`
	DirName   string        `json:"dir_name"`
	ParentID  int64         `json:"parent_id, optional"`
	Children  []DocumentDir `json:"children, optional"`
	SortIndex int           `json:"sort_index, optional"`
	Remark    string        `json:"remark, optional"`
	CreatedAt string        `json:"created_at,optional"`
	UpdatedAt string        `json:"updated_at,optional"`
}

type GetDocumentDirListReq struct {
}

type GetDocumentDirListResp struct {
	DocumentDirs []DocumentDir `json:"document_dirs"` // 列表
}

type GetDocumentDirReq struct {
	ID int64 `json:"id"`
}

type GetDocumentDirResp struct {
	DocumentDir DocumentDir `json:"document_dir"`
}

type CreateDocumentDirReq struct {
	DocumentDir DocumentDir `json:"document_dir"`
}

type UpdateDocumentDirReq struct {
	DocumentDir DocumentDir `json:"document_dir"`
}

type DeleteDocumentDirsReq struct {
	IDs []int64 `json:"ids"`
}

type UploadFileReq struct {
}

type UploadFileResp struct {
	Host     string `json:"host"`
	ObjectID string `json:"object_id"`
}

type GetFileContentReq struct {
	FileID string `json:"file_id"`
}

type Organization struct {
	ID        int64  `json:"id, optional"`
	OrgName   string `json:"org_name"`
	CreatedAt string `json:"created_at,optional"`
	UpdatedAt string `json:"updated_at,optional"`
}

type GetOrgListReq struct {
	PaginationParams
}

type GetOrgListResp struct {
	Total         int64          `json:"total"`         // 总记录数
	Organizations []Organization `json:"organizations"` // Organizations列表
	PageSize      int            `json:"page_size"`     // 每页大小
	PageNumber    int            `json:"page_number"`   // 当前页码
}

type GetOrgReq struct {
	ID int64 `json:"id"`
}

type GetOrgResp struct {
	Organization Organization `json:"organization"`
}

type CreateOrgReq struct {
	Organization  Organization `json:"organization"`
	Authorization string       `header:"Authorization"`
}

type UpdateOrgReq struct {
	Organization  Organization `json:"organization"`
	Authorization string       `header:"Authorization"`
}

type DeleteOrgsReq struct {
	Ids []int64 `json:"ids"`
}

type SchemaOntology struct {
	ID           int64  `json:"id, optional"`
	OntologyName string `json:"ontology_name"`
	OntologyDesc string `json:"ontology_desc, optional"`
	WorkSpaceID  int64  `json:"work_space_id"`
	CreatorID    int64  `json:"creator_id,optional"`
	CreatorName  string `json:"creator_name,optional"`
	CreatedAt    string `json:"created_at,optional"`
	UpdatedAt    string `json:"updated_at,optional"`
}

type GetSchemaOntologyListReq struct {
	WorkSpaceID int64 `json:"work_space_id"`
	PaginationParams
}

type GetSchemaOntologyListResp struct {
	Total           int64            `json:"total"`            // 总记录数
	SchemaOntologys []SchemaOntology `json:"schema_ontologys"` // 列表
	PageSize        int              `json:"page_size"`        // 每页大小
	PageNumber      int              `json:"page_number"`      // 当前页码
}

type GetSchemaOntologyReq struct {
	ID int64 `json:"id"`
}

type GetSchemaOntologyResp struct {
	SchemaOntology SchemaOntology `json:"schema_ontology"`
}

type CreateSchemaOntologyReq struct {
	SchemaOntology SchemaOntology `json:"schema_ontology"`
	Authorization  string         `header:"Authorization"`
}

type UpdateSchemaOntologyReq struct {
	SchemaOntology SchemaOntology `json:"schema_ontology"`
	Authorization  string         `header:"Authorization"`
}

type DeleteSchemaOntologysReq struct {
	IDs []int64 `json:"ids"`
}

type SchemaOntologyProp struct {
	ID          int64  `json:"id, optional"`
	PropName    string `json:"prop_name"`
	PropDesc    string `json:"prop_desc, optional"`
	WorkSpaceID int64  `json:"work_space_id, optional"`
	OntologyID  int64  `json:"ontology_id"`
	CreatorID   int64  `json:"creator_id,optional"`
	CreatorName string `json:"creator_name,optional"`
	CreatedAt   string `json:"created_at,optional"`
	UpdatedAt   string `json:"updated_at,optional"`
}

type GetSchemaOntologyPropListReq struct {
	OntologyID int64 `json:"ontology_id"`
	PaginationParams
}

type GetSchemaOntologyPropListResp struct {
	Total               int64                `json:"total"`                 // 总记录数
	SchemaOntologyProps []SchemaOntologyProp `json:"schema_ontology_props"` // 列表
	PageSize            int                  `json:"page_size"`             // 每页大小
	PageNumber          int                  `json:"page_number"`           // 当前页码
}

type GetSchemaOntologyPropReq struct {
	ID int64 `json:"id"`
}

type GetSchemaOntologyPropResp struct {
	SchemaOntologyProp SchemaOntologyProp `json:"schema_ontology_prop"`
}

type CreateSchemaOntologyPropReq struct {
	SchemaOntologyProp SchemaOntologyProp `json:"schema_ontology_prop"`
	Authorization      string             `header:"Authorization"`
}

type UpdateSchemaOntologyPropReq struct {
	SchemaOntologyProp SchemaOntologyProp `json:"schema_ontology_prop"`
	Authorization      string             `header:"Authorization"`
}

type DeleteSchemaOntologyPropsReq struct {
	IDs []int64 `json:"ids"`
}

type SchemaTriple struct {
	ID                 int64  `json:"id, optional"`
	SourceOntologyID   int64  `json:"source_ontology_id, optional"`
	SourceOntologyName string `json:"source_ontology_name, optional"`
	TargetOntologyID   int64  `json:"target_ontology_id, optional"`
	TargetOntologyName string `json:"target_ontology_name, optional"`
	Relationship       string `json:"relationship, optional"`
	WorkSpaceID        int64  `json:"work_space_id, optional"`
	CreatorID          int64  `json:"creator_id, optional"`
	CreatorName        string `json:"creator_name, optional"`
	CreatedAt          string `json:"created_at, optional"`
	UpdatedAt          string `json:"updated_at, optional"`
}

type GetSchemaTripleListReq struct {
	WorkSpaceID int64 `json:"work_space_id"`
	PaginationParams
}

type GetSchemaTripleListResp struct {
	Total         int64          `json:"total"`          // 总记录数
	SchemaTriples []SchemaTriple `json:"schema_triples"` // 列表
	PageSize      int            `json:"page_size"`      // 每页大小
	PageNumber    int            `json:"page_number"`    // 当前页码
}

type GetSchemaTripleReq struct {
	ID int64 `json:"id"`
}

type GetSchemaTripleResp struct {
	SchemaTriple SchemaTriple `json:"schema_triple"`
}

type CreateSchemaTripleReq struct {
	SchemaTriple  SchemaTriple `json:"schema_triple"`
	Authorization string       `header:"Authorization"`
}

type UpdateSchemaTripleReq struct {
	SchemaTriple  SchemaTriple `json:"schema_triple"`
	Authorization string       `header:"Authorization"`
}

type DeleteSchemaTriplesReq struct {
	IDs []int64 `json:"ids"`
}

type LoginReq struct {
	Account      string `json:"account"`
	Password     string `json:"password"`
	CaptchaID    string `json:"captcha_id"`
	CaptchaValue string `json:"captcha_value"`
}

type LoginResp struct {
	ID           int64  `json:"id"`
	Account      string `json:"account"`
	Role         int    `json:"role"`
	Username     string `json:"username"`
	UserCode     string `json:"user_code"`
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type LogoutReq struct {
	UserID        int64  `json:"user_id"`
	Authorization string `header:"Authorization"`
}

type GetCaptchaResp struct {
	CaptchaID     string `json:"captcha_id"`
	CaptchaBase64 string `json:"captcha_base64"`
}

type GetPublickeyResp struct {
	PublicKey string `json:"public_key"`
}

type User struct {
	ID        int64  `json:"id, optional"`
	UserCode  string `json:"user_code, optional"` // 自动生成
	OrgID     int64  `json:"org_id"`
	OrgName   string `json:"org_name, optional"` // 展示字段
	Account   string `json:"account"`
	Username  string `json:"username"`
	Password  string `json:"password, optional"`
	Phone     string `json:"phone, optional"`
	Mail      string `json:"mail, optional"`
	Enable    int    `json:"enable, optional"` // 启用状态: 1-启用，2-禁用
	Role      int    `json:"role"`             // 角色：2-普通用户，1-管理员
	Avatar    string `json:"avatar, optional"`
	CreatedAt string `json:"created_at, optional"`
	UpdatedAt string `json:"updated_at, optional"`
}

type GetUserListReq struct {
	PaginationParams
}

type GetUserListResp struct {
	Total      int64  `json:"total"`       // 总记录数
	Users      []User `json:"users"`       // User列表
	PageSize   int    `json:"page_size"`   // 每页大小
	PageNumber int    `json:"page_number"` // 当前页码
}

type GetUserReq struct {
	ID int64 `json:"id"`
}

type GetUserResp struct {
	User User `json:"user"`
}

type CreateUserReq struct {
	User User `json:"user"`
}

type UpdateUserReq struct {
	User User `json:"user"`
}

type DeleteUsersReq struct {
	Ids []int64 `json:"ids"`
}

type ExtractTask struct {
	ID          int64          `json:"id,optional"`
	Docs        []Document     `json:"docs"`
	Triples     []SchemaTriple `json:"triples"`
	TaskName    string         `json:"task_name"`
	Remark      string         `json:"remark,optional"`
	WorkSpaceID int64          `json:"work_space_id"`
	TaskStatus  int            `json:"task_status,optional"`
	Published   bool           `json:"published,optional"`
	CreatorID   int64          `json:"creator_id,optional"`
	CreatorName string         `json:"creator_name,optional"`
	CreatedAt   string         `json:"created_at,optional"`
	UpdatedAt   string         `json:"updated_at,optional"`
}

type GetExtractTaskListReq struct {
	WorkSpaceID int64 `json:"work_space_id"`
	PaginationParams
}

type GetExtractTaskListResp struct {
	Total        int64         `json:"total"`         // 总记录数
	ExtractTasks []ExtractTask `json:"extract_tasks"` // 列表
	PageSize     int           `json:"page_size"`     // 每页大小
	PageNumber   int           `json:"page_number"`   // 当前页码
}

type GetExtractTaskReq struct {
	ID int64 `json:"id"`
}

type GetExtractTaskResp struct {
	ExtractTask ExtractTask `json:"extract_task"`
}

type CreateExtractTaskReq struct {
	ExtractTask   ExtractTask `json:"extract_task"`
	Authorization string      `header:"Authorization"`
}

type UpdateExtractTaskReq struct {
	ExtractTask   ExtractTask `json:"extract_task"`
	Authorization string      `header:"Authorization"`
}

type DeleteExtractTasksReq struct {
	IDs []int64 `json:"ids"`
}

type PublishExtractTaskReq struct {
	ID int64 `json:"id"`
}

type RunExtractTaskReq struct {
	ID int64 `json:"id"`
}

type Entity struct {
	ID         int64        `json:"id,optional"`
	TaskID     int64        `json:"task_id"`
	EntityName string       `json:"entity_name"`
	Props      []EntityProp `json:"props, optional"`
}

type GetEntityListReq struct {
	TaskID int64 `json:"task_id"`
	PaginationParams
}

type GetEntityListResp struct {
	Total      int64    `json:"total"`       // 总记录数
	Entities   []Entity `json:"entities"`    // 列表
	PageSize   int      `json:"page_size"`   // 每页大小
	PageNumber int      `json:"page_number"` // 当前页码
}

type CreateEntityReq struct {
	Entity Entity `json:"entity"`
}

type UpdateEntityReq struct {
	Entity Entity `json:"entity"`
}

type DeleteEntitiesReq struct {
	IDs []int64 `json:"ids"`
}

type EntityProp struct {
	ID        int64  `json:"id,optional"`
	TaskID    int64  `json:"task_id"`
	EntityID  int64  `json:"entity_id"`
	PropName  string `json:"prop_name"`
	PropValue string `json:"prop_value"`
}

type GetPropListReq struct {
	EntityID int64 `json:"entity_id"`
	PaginationParams
}

type GetPropListResp struct {
	Total      int64        `json:"total"`       // 总记录数
	Props      []EntityProp `json:"props"`       // 列表
	PageSize   int          `json:"page_size"`   // 每页大小
	PageNumber int          `json:"page_number"` // 当前页码
}

type CreatePropReq struct {
	Prop EntityProp `json:"prop"`
}

type UpdatePropReq struct {
	Prop EntityProp `json:"prop"`
}

type DeletePropsReq struct {
	IDs []int64 `json:"ids"`
}

type Relationship struct {
	ID               int64  `json:"id,optional"`
	TaskID           int64  `json:"task_id"`
	SourceEntityID   int64  `json:"source_entity_id"`
	SourceEntityName string `json:"source_entity_name,optional"`
	TargetEntityID   int64  `json:"target_entity_id"`
	TargetEntityName string `json:"target_entity_name,optional"`
	RelationshipName string `json:"relationship_name"`
}

type GetRelationshipListReq struct {
	TaskID int64 `json:"task_id"`
	PaginationParams
}

type GetRelationshipListResp struct {
	Total         int64          `json:"total"`         // 总记录数
	Relationships []Relationship `json:"relationships"` // 列表
	PageSize      int            `json:"page_size"`     // 每页大小
	PageNumber    int            `json:"page_number"`   // 当前页码
}

type CreateRelationshipReq struct {
	Relationship Relationship `json:"relationship"`
}

type UpdateRelationshipReq struct {
	Relationship Relationship `json:"relationship"`
}

type DeleteRelationshipsReq struct {
	IDs []int64 `json:"ids"`
}

type ExtractTaskResult struct {
	TaskID        int64          `json:"task_id"`
	Entities      []Entity       `json:"entities"`
	Relationships []Relationship `json:"relationships"`
}

type GetExtractTaskResultReq struct {
	TaskID int64 `json:"task_id"`
}

type GetExtractTaskResultResp struct {
	ExtractTaskResult ExtractTaskResult `json:"extract_task_result"`
}

type KnowledgeGraphWorkspace struct {
	ID                          int64  `json:"id, optional"`
	KnowledgeGraphWorkspaceName string `json:"knowledge_graph_workspace_name"`
	CreatorID                   int64  `json:"creator_id, optional"`
	CreatorName                 string `json:"creator_name, optional"`
	CreatedAt                   string `json:"created_at, optional"`
	UpdatedAt                   string `json:"updated_at, optional"`
}

type GetKnowledgeGraphWorkspaceListReq struct {
	PaginationParams
}

type GetKnowledgeGraphWorkspaceListResp struct {
	Total                    int64                     `json:"total"`                      // 总记录数
	KnowledgeGraphWorkspaces []KnowledgeGraphWorkspace `json:"knowledge_graph_workspaces"` // 列表
	PageSize                 int                       `json:"page_size"`                  // 每页大小
	PageNumber               int                       `json:"page_number"`                // 当前页码
}

type GetKnowledgeGraphWorkspaceReq struct {
	ID int64 `json:"id"`
}

type GetKnowledgeGraphWorkspaceResp struct {
	KnowledgeGraphWorkspace KnowledgeGraphWorkspace `json:"knowledge_graph_workspace"`
}

type CreateKnowledgeGraphWorkspaceReq struct {
	KnowledgeGraphWorkspace KnowledgeGraphWorkspace `json:"knowledge_graph_workspace"`
	Authorization           string                  `header:"Authorization"`
}

type UpdateKnowledgeGraphWorkspaceReq struct {
	KnowledgeGraphWorkspace KnowledgeGraphWorkspace `json:"knowledge_graph_workspace"`
	Authorization           string                  `header:"Authorization"`
}

type DeleteKnowledgeGraphWorkspacesReq struct {
	IDs []int64 `json:"ids"`
}
